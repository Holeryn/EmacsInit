;; Object semanticdb-project-database-file-1590d3d9b124
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file-1590d3d9b124"
  :tables
  (list
    (semanticdb-table "semanticdb-table-1590d3d9b084"
      :major-mode c-mode
      :tags 
        '( ("include/gfx.h" include nil nil [1 25])
            ("mandelbrot.h" include nil nil [26 49])
            ("PADDING" variable (:constant-flag t) nil [59 66])
            ("main" function
               (:arguments 
                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [81 86]))                  
                :type "int")
                nil [72 639]))          
      :file "main.c"
      :pointmax 640
      :fsize 639
      :lastmodtime '(24783 476 895685 976000)
      :unmatched-syntax nil
      :lexical-table 
        '(("PADDING")
          )
)
    (semanticdb-table "semanticdb-table-1590d3d9b0a4"
      :major-mode makefile-gmake-mode
      :tags 
        '( ("SRC_FILES" variable (:default-value ("main.c" "include/gfx.c")) nil [1 34])
            ("CC_FLAGS" variable (:default-value ("-std=c99" "-Wall" "-g" "-Wextra" "-lX11")) nil [34 77])
            ("CC" variable (:default-value ("gcc")) nil [77 86])
            ("all" function nil nil [87 140])
            ("clean" function nil nil [141 176]))          
      :file "Makefile"
      :pointmax 176
      :fsize 192
      :lastmodtime '(24782 12577 848179 209000)
      :unmatched-syntax nil)
    (semanticdb-table "semanticdb-table-1590d3d9b0c4"
      :major-mode c-mode
      :tags 
        '( ("mandelbrot.h" include nil nil [1 24])
            ("MAX_ITERATION" variable (:constant-flag t) nil [34 47])
            ("IsMpoint" function
               (:arguments 
                  ( ("Px" variable (:type "int") (reparse-symbol arg-sub-list) [275 282])
                    ("Py" variable (:type "int") (reparse-symbol arg-sub-list) [282 289]))                  
                :type "int")
                nil [262 745]))          
      :file "mandelbrot.c"
      :pointmax 746
      :fsize 745
      :lastmodtime '(24782 21611 31110 545000)
      :unmatched-syntax nil
      :lexical-table 
        '(("MAX_ITERATION" . ((number "1000" 48 . 52)))
          )
)

    (semanticdb-table "semanticdb-table-1590d3d9b104"
      :major-mode c-mode
      :tags 
        '( ("MANDELBROT" variable (:constant-flag t) nil [28 38])
            ("TRUE" variable (:constant-flag t) nil [48 52])
            ("FALSE" variable (:constant-flag t) nil [63 68])
            ("DEBUG" variable (:constant-flag t) nil [80 85])
            ("WIDTH" variable (:constant-flag t) nil [134 139])
            ("WIDTH" variable (:constant-flag t) nil [134 139])
            ("HEIGHT" variable (:constant-flag t) nil [154 160])
            ("HEIGHT" variable (:constant-flag t) nil [154 160])
            ("HEIGHT" variable (:constant-flag t) nil [154 160])
            ("HEIGHT" variable (:constant-flag t) nil [154 160])
            ("HEIGHT" variable (:constant-flag t) nil [154 160])
            ("math.h" include (:system-flag t) nil [166 183])
            ("stdlib.h" include (:system-flag t) nil [184 203])
            ("stdio.h" include (:system-flag t) nil [220 239])
            ("IsMpoint" function
               (:prototype-flag t
                :arguments 
                  ( ("x" variable (:type "int") (reparse-symbol arg-sub-list) [261 267])
                    ("y" variable (:type "int") (reparse-symbol arg-sub-list) [268 274]))                  
                :type "int")
                nil [248 275]))          
      :file "mandelbrot.h"
      :pointmax 284
      :fsize 283
      :lastmodtime '(24782 21438 67784 907000)
      :unmatched-syntax nil
      :lexical-table 
        '(("MANDELBROT")
          ("MAX")
          ("TRUE" . ((number "1" 53 . 54)))
          ("FALSE" . ((number "0" 69 . 70)))
          ("HEIGHT" . ((number "500" 161 . 164)))
          ("WIDTH" . ((number "1980" 142 . 146)))
          ("DEBUG" . ((number "1" 86 . 87)))
          )
))
  :file "!home!holeryn!Desktop!C!mandelbroat!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
